---
import { getIronSession } from "iron-session";
import { Agent } from "@atproto/api";

import type { RequestContext } from "../../server";
import Notifications from "../components/Notifications";
import Login from "../components/login.astro";
import { getSessionAgent } from "../lib/util";
import * as Profile from '../lexicon/types/app/bsky/actor/profile'

const ctx = Astro.locals as RequestContext;
const agent = await getSessionAgent(ctx);
const response = await agent?.com.atproto.repo.getRecord({
  repo: agent.assertDid,
  collection: 'app.bsky.actor.profile',
  rkey: 'self'
})
const profile = Profile.isRecord(response?.data.value) && Profile.validateRecord(response?.data.value).success ? response.data.value : {};
const nudges = await ctx.db.selectFrom("nudge").selectAll().orderBy('indexedAt', 'desc').limit(10).execute()
const didHandleMap = await ctx.resolver.resolveDidsToHandles(nudges.map((n) => n.authorDid))
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <h1>Astro</h1>
    {agent ? <></> : <Login />}
    {profile ? <><p>{profile.displayName}</p><p>{agent?.assertDid}</p></> : <></>}
    <form action="/nudge" method="post">
      <input type="text" name="subject" />
      <button type="submit" />
    </form>
    {nudges.map((nudge, i) => {
      const authorHandle = didHandleMap[nudge.authorDid] || nudge.authorDid;
      const subjectHandle = didHandleMap[nudge.subject] || nudge.subject;
      return (<div class="nudge-line">
        <div>
          <div class="nudge">@{subjectHandle} were nudged by @{authorHandle}!</div>
        </div>
      </div>)
    })}
  </body>
</html>
